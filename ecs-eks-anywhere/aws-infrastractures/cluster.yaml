AWSTemplateFormatVersion: "2010-09-09"
Description: >
  This template deploys an ECS cluster to the provided VPC and subnets
  using an Auto Scaling Group

Parameters:
  Environment:
    Description: An environment name that will be prefixed to resource names
    Type: String
    AllowedValues:
      # this is due nodejs not recognising prod as valid NODE_ENV
      - prod
      - stag
      - dev
    ConstraintDescription: invalid environment, only [production, staging, development] are allowed

  Appname:
    Type: AWS::SSM::Parameter::Value<String>
    Default: Appname

  VPC:
    Type: AWS::SSM::Parameter::Value<String>


Conditions:
  IsProduction: !Equals [ !Ref Environment, prod ]

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${Appname}-${Environment}
      ClusterSettings:
        - Name: containerInsights
          Value: !If [IsProduction, enabled, disabled]
      Tags:
        - Key: app
          Value: !Ref Appname
        - Key: env
          Value: !Ref Environment
        - Key: type
          Value: compute
        - Key: description
          Value: ECS cluster


  # This IAM Role is attached to all of the ECS hosts. It is based on the default role
  # published here:
  # http://docs.aws.amazon.com/AmazonECS/latest/developerguide/instance_IAM_role.html
  ECSRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: !Sub ${Environment}-ECSRole-${AWS::Region}
      Tags:
        - Key: app
          Value: !Ref Appname
        - Key: env
          Value: !Ref Environment
        - Key: type
          Value: security
        - Key: description
          Value: Role for ECS
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                    "Service": "ec2.amazonaws.com"
                }
            }]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Policies:
        - PolicyName: ecs-service
          PolicyDocument: |
            {
                "Statement": [{
                    "Effect": "Allow",
                    "Action": [
                        "ecs:CreateCluster",
                        "ecs:DeregisterContainerInstance",
                        "ecs:DiscoverPollEndpoint",
                        "ecs:Poll",
                        "ecs:RegisterContainerInstance",
                        "ecs:StartTelemetrySession",
                        "ecs:Submit*",
                        "ecr:BatchCheckLayerAvailability",
                        "ecr:BatchGetImage",
                        "ecr:GetDownloadUrlForLayer",
                        "ecr:GetAuthorizationToken",
                        "ssm:GetParameter"
                    ],
                    "Resource": "*"
                }]
            }


  ECSAnywhereRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: ecs-anywhere-role
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                    "Service": "ssm.amazonaws.com"
                }
            }]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
      Tags:
        - Key: app
          Value: !Ref Appname
        - Key: env
          Value: !Ref Environment
        - Key: type
          Value: security
        - Key: description
          Value: Role for ECS

  # PARAMETERS ==================
  ClusterArn:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${Appname}-${Environment}-cluster-arn
      Tags:
        app: !Ref Appname
        env: !Ref Environment
        type: parameter
        description: Cluster arn
      Type: String
      Value: !GetAtt ECSCluster.Arn


Outputs:
  Cluster:
    Description: A reference to the ECS cluster
    Value: !Ref ECSCluster
